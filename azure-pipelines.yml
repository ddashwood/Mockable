trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

  major: '0'
  minor: '1'
  patch: '5'
  version: $(major).$(minor).$(patch)

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'NuGet Pack for Core'
  inputs:
    command: pack
    packagesToPack: '**/Mockable.Core.csproj'
    configuration: '$(buildConfiguration)'
    versioningScheme: byEnvVar
    versionEnvVar: version

- task: DotNetCoreCLI@2
  displayName: 'NuGet Pack for Moq'
  inputs:
    command: pack
    packagesToPack: '**/Mockable.Moq.csproj'
    configuration: '$(buildConfiguration)'
    versioningScheme: byEnvVar
    versionEnvVar: version

- task: DotNetCoreCLI@2
  displayName: 'NuGet Pack for FakeItEasy'
  inputs:
    command: pack
    packagesToPack: '**/Mockable.FakeItEasy.csproj'
    configuration: '$(buildConfiguration)'
    versioningScheme: byEnvVar
    versionEnvVar: version

- task: NuGetCommand@2
  displayName: 'NuGet Push'
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: 'Deans Nuget feed'
